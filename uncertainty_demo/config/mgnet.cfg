[dataset]
tensor_type = float
task_type   = seg

#root_dir  = /home/disk2t/data/fetalMR/DLLS_brain
root_dir  = ./data
train_csv = config/image_train.csv
valid_csv = config/image_valid.csv
test_csv  = config/image_test.csv

load_pixelwise_weight = False
# modality number
modal_num = 1

# data transforms
train_transform = [ChannelWiseThresholdWithNormalize, RandomFlip, RandomRotate, Pad, RandomCrop, LabelToProbability]
test_transform  = [ChannelWiseThresholdWithNormalize, Pad]

ChannelWiseThresholdWithNormalize_threshold_lower = [0]
ChannelWiseThresholdWithNormalize_threshold_upper = [None]
ChannelWiseThresholdWithNormalize_mean_std_mode   = True
ChannelWiseThresholdWithNormalize_inverse         = False

RandomFlip_flip_depth  = True
RandomFlip_flip_height = True
RandomFlip_flip_width  = True
RandomFlip_inverse     = True

RandomRotate_angle_range_d = [-180, 180]
RandomRotate_angle_range_h = None
RandomRotate_angle_range_w = None
RandomRotate_inverse       = True

Pad_output_size = [16, 192, 192]
Pad_ceil_mode   = False
Pad_inverse = True

RandomCrop_output_size = [12, 144, 144]
RandomCrop_foreground_focus = False
RandomCrop_foreground_ratio = None
RandomCrop_mask_label       = None
RandomCrop_inverse          = False

LabelToProbability_class_num = 2
LabelToProbability_inverse   = False

[network]
# this section gives parameters for network
# the keys may be different for different networks

# type of network
net_type = MGNet

# number of class, required for segmentation task
class_num     = 2
in_chns       = 1
block_type    = UNetBlock
feature_chns  = [64, 128, 256, 512, 512]
feature_grps  = [ 4,  4,   4,   4,    1]
norm_type     = group_norm
acti_func     = leakyrelu
leakyrelu_negative_slope = 0.01
dropout       = True
depth_sep_deconv = False
deep_supervision = False

[training]
gpus = [0]

batch_size    = 1
loss_type     = MultiScaleDiceLoss
MultiScaleDiceLoss_Enable_Pixel_Weight = False
MultiScaleDiceLoss_Enable_Class_Weight = False
MultiScaleDiceLoss_Scale_Weight = [1.0, 1.0, 1.0, 1.0]

# for optimizers
optimizer     = Adam
learning_rate = 1e-4
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular (MultiStepLR)
lr_gamma      = 0.5
lr_milestones = [5000, 10000, 15000, 20000, 25000, 30000]

ckpt_save_dir    = exp_uncertain/model/unet2d_mg
ckpt_save_prefix = mgnet

# start iter
iter_start = 0
iter_max   = 20000
iter_valid = 100
iter_save  = 5000

[testing]
gpus = [0]

ckpt_mode       = 2
ckpt_name       = model/mgnet_20000.pt
evaluation_mode = False
multi_pred_avg  = True
output_num      = 4

# use test time augmentation
tta_mode              = 0
infer_sliding_window  = False
sliding_window_size   = None
sliding_window_stride = None

label_source = None
label_target = None

filename_replace_source = None
filename_replace_target = None

#output_dir = exp_uncertain/result/unet2d_mg/predict
output_dir = result
save_probability = False
save_multi_pred_var = True

